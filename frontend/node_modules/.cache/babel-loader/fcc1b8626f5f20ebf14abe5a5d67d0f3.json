{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/upload/uploadButton/UploadButtonSmall.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport UploadIMG from './uploadIMG/UploadIMG.png';\nimport Caption from \"../annotation/Caption\";\nimport Tags from \"../annotation/Tags\";\nimport FileInputSimple from \"./FileInputSimple\";\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MatchBar from \"../../explore/Matchbar\"; //popover styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: 'transparent'\n  }\n})); // dialog styling\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    color: \"#FFFFFF\",\n    backgroundColor: \"#E6DAC8\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n}); // return form styling\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#000000\"\n    } // secondary: {\n    //     main: \"#668389\",\n    // },\n\n  }\n});\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: \"#FFFFFF\"\n  }\n}))(MuiDialogContent);\nexport default function CustomizedDialogs(props) {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [forms, setForms] = React.useState(false);\n  const [post, setPost] = React.useState(false);\n  const [image, setImage] = React.useState(null);\n  const [tags, setTags] = React.useState([]);\n  const [src, setSrc] = React.useState(null);\n  const [returnTags, setReturnTags] = React.useState(null);\n  const [caption, setCaption] = React.useState(null);\n  const [returnCaption, setReturnCaption] = React.useState([]);\n  const [returnAITags, setReturnAITags] = React.useState([]);\n  const [progress, setProgress] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const showPopover = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const openPopover = Boolean(anchorEl);\n\n  const showInputForms = () => {\n    setForms(true);\n  };\n\n  const enteredCaption = caption => {\n    setCaption(caption);\n  };\n\n  const selectedTags = tags => {\n    setTags(tags);\n  };\n\n  const selectedImage = img => {\n    setImage(img);\n  };\n\n  async function postData() {\n    setProgress(true);\n    console.log(tags);\n    console.log(tags.join(\",\"));\n    let formData = new FormData();\n    formData.append(\"files\", image);\n    formData.append(\"tags\", tags.join(\",\"));\n    formData.append(\"caption\", caption);\n    let response = await axios.post(\"http://localhost:8000/images\", formData); // props.newTitle();\n\n    setSrc(`http://localhost:8000/images/${response.data.id}.jpeg`);\n    console.log(response.data.caption);\n    setReturnCaption(response.data.caption);\n    console.log(response.data.tags);\n    setReturnTags(response.data.tags);\n    console.log(response.data.ai_tags);\n    setReturnAITags(response.data.ai_tags || []);\n    setPost(true);\n    setProgress(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"upload-button\",\n      onClick: handleClickOpen // onMouseEnter={showPopover}\n      // onMouseLeave={closePopover}\n      ,\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: UploadIMG,\n          alt: \"upload\",\n          width: \"90px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      elevation: 0,\n      open: openPopover,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      onClose: closePopover,\n      disableRestoreFocus: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          color: \"#B272CE\"\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle //newTitle={newTitle}\n      , {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"returnForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              display: \"block\",\n              margin: \"0 auto\",\n              height: \"50%\",\n              borderRadius: \"5px\"\n            },\n            className: \"returned-image\",\n            src: src,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"returned-caption\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: returnCaption\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 45\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tags-return\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"primary\",\n                children: \" Your Tags: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), returnTags.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n                color: \"primary\",\n                className: \"returned-tags-chip\",\n                style: {\n                  color: \"#B272CE\",\n                  backgroundColor: \"#FFFFFF\"\n                },\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  style: {\n                    color: \"#B272CE\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"#FFFFFF\"\n                    },\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this),\n                label: item.tag,\n                variant: \"outlined\"\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ai_tags_return\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"secondary\",\n                children: \" Tags from ImageNet AI: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), returnAITags.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h12\",\n                color: \"#OOOOOO\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"[couldn't identify any tags] \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: returnAITags.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n                  className: \"returned-ai-tags-chip\",\n                  style: {\n                    color: \"#000000\",\n                    backgroundColor: \"#FFFFFF\"\n                  },\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    style: {\n                      background: \"#B5BCB4\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"#FFFFFF\"\n                      },\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 53\n                  }, this),\n                  label: item.tag\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: returnAITags.map(aiitem => {\n                  return /*#__PURE__*/_jsxDEV(MatchBar, {\n                    match: parseFloat(aiitem.confidence),\n                    aitag: aiitem.tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postForm\",\n          style: {\n            padding: \"50px\"\n          },\n          children: [forms && /*#__PURE__*/_jsxDEV(Caption, {\n            enteredCaption: enteredCaption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FileInputSimple, {\n            showInputForms: showInputForms,\n            FileInput: true,\n            selectedImage: selectedImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), forms && /*#__PURE__*/_jsxDEV(Tags, {\n            selectedTags: selectedTags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-data\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: !image || !caption || tags.length === 0,\n              className: \"save-button\",\n              palette: \"primary\",\n              onClick: postData,\n              children: [\" \", \"Save\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: theme,\n              children: progress && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedDialogs, \"MN5B7UAa/53kMc7uEB4OTn2HuVw=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedDialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDialogs\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/upload/uploadButton/UploadButtonSmall.js"],"names":["React","axios","UploadIMG","Caption","Tags","FileInputSimple","Typography","Chip","Avatar","Button","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Popover","ThemeProvider","CircularProgress","createTheme","makeStyles","withStyles","MatchBar","useStyles","theme","popover","pointerEvents","paper","padding","spacing","backgroundColor","styles","root","margin","color","closeButton","position","right","top","palette","grey","primary","main","DialogTitle","props","children","classes","onClose","other","DialogContent","CustomizedDialogs","anchorEl","setAnchorEl","useState","open","setOpen","forms","setForms","post","setPost","image","setImage","tags","setTags","src","setSrc","returnTags","setReturnTags","caption","setCaption","returnCaption","setReturnCaption","returnAITags","setReturnAITags","progress","setProgress","handleClickOpen","handleClose","showPopover","event","currentTarget","closePopover","openPopover","Boolean","showInputForms","enteredCaption","selectedTags","selectedImage","img","postData","console","log","join","formData","FormData","append","response","data","id","ai_tags","vertical","horizontal","display","height","borderRadius","map","item","tag","length","background","aiitem","parseFloat","confidence"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport UploadIMG from './uploadIMG/UploadIMG.png';\nimport Caption from \"../annotation/Caption\";\nimport Tags from \"../annotation/Tags\";\nimport FileInputSimple from \"./FileInputSimple\";\n\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport MatchBar from \"../../explore/Matchbar\";\n\n//popover styling\nconst useStyles = makeStyles((theme) => ({\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n        backgroundColor: 'transparent',\n    },\n}));\n\n\n// dialog styling\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n        color: \"#FFFFFF\",\n        backgroundColor: \"#E6DAC8\",\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\n// return form styling\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: \"#000000\",\n        },\n        // secondary: {\n        //     main: \"#668389\",\n        // },\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label=\"close\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        backgroundColor: \"#FFFFFF\",\n    },\n}))(MuiDialogContent);\n\n\nexport default function CustomizedDialogs(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [forms, setForms] = React.useState(false);\n\n    const [post, setPost] = React.useState(false);\n    const [image, setImage] = React.useState(null);\n    const [tags, setTags] = React.useState([]);\n    const [src, setSrc] = React.useState(null);\n    const [returnTags, setReturnTags] = React.useState(null);\n    const [caption, setCaption] = React.useState(null);\n    const [returnCaption, setReturnCaption] = React.useState([]);\n    const [returnAITags, setReturnAITags] = React.useState([]);\n    const [progress, setProgress] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const showPopover = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const closePopover = () => {\n        setAnchorEl(null);\n    };\n\n    const openPopover = Boolean(anchorEl);\n\n    const showInputForms = () => {\n        setForms(true);\n    }\n\n    const enteredCaption = (caption) => {\n        setCaption(caption);\n    };\n    const selectedTags = (tags) => {\n        setTags(tags);\n    };\n\n    const selectedImage = (img) => {\n        setImage(img);\n    };\n\n    async function postData() {\n        setProgress(true);\n        console.log(tags);\n        console.log(tags.join(\",\"));\n        let formData = new FormData();\n        formData.append(\"files\", image);\n        formData.append(\"tags\", tags.join(\",\"));\n        formData.append(\"caption\", caption);\n        let response = await axios.post(\"http://localhost:8000/images\", formData);\n        // props.newTitle();\n        setSrc(`http://localhost:8000/images/${response.data.id}.jpeg`);\n        console.log(response.data.caption);\n        setReturnCaption(response.data.caption);\n        console.log(response.data.tags);\n        setReturnTags(response.data.tags);\n        console.log(response.data.ai_tags);\n        setReturnAITags(response.data.ai_tags || []);\n        setPost(true);\n        setProgress(false);\n    }\n\n    return (\n        <div>\n            <IconButton\n                className=\"upload-button\"\n                onClick={handleClickOpen}\n                // onMouseEnter={showPopover}\n                // onMouseLeave={closePopover}\n                size=\"small\"\n            >\n                <div>\n                    <img src={UploadIMG} alt=\"upload\" width=\"90px\" />\n                </div>\n            </IconButton>\n            <Popover\n                id=\"mouse-over-popover\"\n                className={classes.popover}\n                classes={{\n                    paper: classes.paper,\n                }}\n                elevation={0}\n                open={openPopover}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                onClose={closePopover}\n                disableRestoreFocus\n            >\n                <Typography variant='h6' style={{ color: \"#B272CE\" }}>\n                    Upload\n                </Typography>\n            </Popover>\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n                maxWidth=\"md\"\n                fullWidth={true}\n            >\n                <DialogTitle\n                    //newTitle={newTitle}\n                    id=\"customized-dialog-title\"\n                    onClose={handleClose}\n                >\n                    Upload Image\n                </DialogTitle>\n                <DialogContent dividers>\n                    {post ?\n\n                        <div className=\"returnForm\" >\n                            <img\n                                style={{\n                                    display: \"block\",\n                                    margin: \"0 auto\",\n                                    height: \"50%\",\n                                    borderRadius: \"5px\",\n                                }}\n                                className=\"returned-image\"\n                                src={src}\n                                alt=\"\"\n                            />\n                            <br />\n                            <ThemeProvider theme={theme}>\n                                <Typography variant=\"h6\" color=\"primary\">\n                                    <div className=\"returned-caption\">\n                                        <i>\"</i>\n                                        <i>\n                                            {\" \"}\n                                            <span>{returnCaption}</span>{\" \"}\n                                        </i>\n                                        <i>\"</i>\n                                    </div>\n                                </Typography>\n                                <br />\n                                <span className=\"tags-return\">\n                                    <Typography color=\"primary\"> Your Tags: </Typography>\n                                    {returnTags.map((item) => (\n                                        <Chip\n                                            color=\"primary\"\n                                            className=\"returned-tags-chip\"\n                                            style={{ color: \"#B272CE\", backgroundColor: \"#FFFFFF\" }}\n                                            avatar={\n                                                <Avatar style={{ color: \"#B272CE\" }}>\n                                                    <div style={{ color: \"#FFFFFF\" }}>\n                                                        #\n                                                    </div>\n                                                </Avatar>\n                                            }\n                                            key={item.id}\n                                            label={item.tag}\n                                            variant=\"outlined\"\n                                        />\n                                    ))}\n                                </span>\n                                <br />\n                                <br />\n                                <span className=\"ai_tags_return\">\n                                    <Typography color=\"secondary\"> Tags from ImageNet AI: </Typography>\n                                    {returnAITags.length === 0 && (\n                                        <Typography variant=\"h12\" color=\"#OOOOOO\">\n                                            <i>[couldn't identify any tags] </i>\n                                        </Typography>\n                                    )}\n                                    <div>\n                                        {returnAITags.map((item) => (\n                                            <Chip\n                                                className=\"returned-ai-tags-chip\"\n                                                style={{ color: \"#000000\", backgroundColor: \"#FFFFFF\" }}\n                                                avatar={\n                                                    <Avatar style={{ background: \"#B5BCB4\" }}>\n                                                        <div style={{ color: \"#FFFFFF\" }}>\n                                                            #\n                                                        </div>\n                                                    </Avatar>\n                                                }\n                                                key={item.id}\n                                                label={item.tag}\n                                            />\n                                        ))}\n                                    </div>\n                                    <div>\n                                        {returnAITags.map((aiitem) => {\n                                            return (\n                                                <MatchBar\n                                                    match={parseFloat(aiitem.confidence)}\n                                                    aitag={aiitem.tag}\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                </span>\n\n                                <br />\n                                <br />\n                            </ThemeProvider>\n                        </div>\n\n                        :\n\n                        <div className=\"postForm\" style={{ padding: \"50px\" }}>\n                            {forms &&\n                                <Caption enteredCaption={enteredCaption} />}\n\n                            <FileInputSimple\n                                showInputForms={showInputForms}\n                                FileInput selectedImage={selectedImage}\n                            />\n                            {forms && <Tags selectedTags={selectedTags} />}\n\n\n                            <div className=\"save-data\">\n                                <Button\n                                    disabled={!image || !caption || tags.length === 0}\n                                    className=\"save-button\"\n                                    palette=\"primary\"\n                                    onClick={postData}\n                                >\n                                    {\" \"}\n                                    Save{\" \"}\n                                </Button>\n                                <ThemeProvider theme={theme}>\n                                    {progress && <CircularProgress />}\n                                </ThemeProvider>\n                            </div>\n                        </div>\n                    }\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
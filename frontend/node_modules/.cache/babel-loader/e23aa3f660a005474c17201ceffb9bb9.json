{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/explore/Searchbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Carousel from 'react-material-ui-carousel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MatchBar from \"./Matchbar\"; // import image1 from './Gallery/image1/image1.jpg';\n// import image2 from './Gallery/image2/image2.jpg';\n// import image3 from './Gallery/image3/image3.png';\n// const images = [\n//   { id: 1, src: `${image1}` },\n//   { id: 2, src: `${image2}` },\n//   { id: 3, src: `${image3}` },\n// ]\n// styling for dialog\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: \"transparent\",\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n    borderRadius: \"5px\"\n  },\n  modal: {\n    display: \"flex\",\n    padding: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    color: \"#2B4466\",\n    backgroundColor: \"#E6DAC8\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: \"#E6DAC8\"\n  }\n}))(MuiDialogContent);\nexport default function Search() {\n  _s();\n\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [gallery, setGallery] = React.useState(true);\n  const [carousel, setCarousel] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setQuery(search);\n    console.log(search);\n  }\n\n  const onSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/images?tag=${query}`);\n        const json = await response.json();\n        console.log({\n          json\n        });\n        setResults(json);\n        handleOpen();\n      } catch (error) {}\n    }\n\n    if (query !== \"\") {\n      console.log(\"the data does not exist\");\n      fetchData();\n    }\n  }, [query]);\n\n  const showCarousel = () => {\n    setGallery(false);\n    setCarousel(true);\n  };\n\n  const showGallery = () => {\n    setCarousel(false);\n    setGallery(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBar\",\n      style: {\n        padding: \"15px 20px 0px 0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search a tag\",\n        value: search,\n        onChange: onSearch,\n        onRequestSearch: onSubmit,\n        cancelOnEscape: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eChartsGallery\",\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: handleClose,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        open: open,\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle //newTitle={newTitle}\n        , {\n          id: \"customized-dialog-title\",\n          onClose: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Images for `$\", search, \"`\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: [gallery && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.root,\n              children: /*#__PURE__*/_jsxDEV(ImageList, {\n                rowHeight: 160,\n                className: classes.imageList,\n                cols: 3,\n                children: results.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n                  cols: image.cols || 1,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: image.id,\n                    alt: \"\",\n                    maxHeight: \"100px\",\n                    onClick: showCarousel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)\n                }, image.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), carousel && /*#__PURE__*/_jsxDEV(Carousel, {\n            children: results.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carouselResults\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: \"mtag-label\",\n                children: [\" \", item.caption]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                cols: item.cols || 1,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: item.id,\n                  src: item.src,\n                  alt: \"\",\n                  maxHeight: \"100px\",\n                  onClick: showGallery\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metadata\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"block\",\n                    textAlign: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: \"mtag-label\",\n                    children: \" Our Tags:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"userTags\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    padding: \"10px\"\n                  },\n                  children: item.tags.map(posttag => {\n                    return /*#__PURE__*/_jsxDEV(Chip, {\n                      className: \"chip1\",\n                      style: {\n                        color: \"#B272CE\",\n                        backgroundColor: \"#FFFFFF\"\n                      },\n                      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                        style: {\n                          color: \"#B272CE\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            color: \"#FFFFFF\"\n                          },\n                          children: \"#\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 31\n                      }, this),\n                      label: posttag.tag,\n                      component: \"a\",\n                      href: \"#chip\",\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      clickable: true\n                    }, posttag.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"block\",\n                    textAlign: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: \"ai_tags\",\n                    children: \" Tags from ImageNet AI:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"AITAgs\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    padding: \"10px\"\n                  },\n                  children: item.ai_tags.map(aitag => {\n                    return /*#__PURE__*/_jsxDEV(Chip, {\n                      className: \"chip2\",\n                      style: {\n                        color: \"#000000\",\n                        backgroundColor: \"#FFFFFF\"\n                      },\n                      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                        style: {\n                          background: \"#B5BCB4\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            color: \"#FFFFFF\"\n                          },\n                          children: \"#\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 31\n                      }, this),\n                      label: aitag.tag,\n                      component: \"a\",\n                      href: \"#chip\",\n                      clickable: true\n                    }, aitag.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.ai_tags.map(aiitem => {\n                    return /*#__PURE__*/_jsxDEV(MatchBar, {\n                      match: parseFloat(aiitem.confidence),\n                      aitag: aiitem.tag\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Wtt96RNYxlkpE7zm4OEgOJRzgdQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/explore/Searchbar.js"],"names":["React","useState","useEffect","SearchBar","Typography","Chip","Avatar","Carousel","makeStyles","Dialog","MuiDialogTitle","MuiDialogContent","ImageList","ImageListItem","IconButton","CloseIcon","withStyles","MatchBar","useStyles","theme","paper","backgroundColor","boxShadow","shadows","outline","borderRadius","modal","display","padding","alignItems","justifyContent","styles","root","margin","spacing","color","closeButton","position","right","top","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","Search","search","setSearch","query","setQuery","results","setResults","open","setOpen","gallery","setGallery","carousel","setCarousel","handleOpen","handleClose","onSubmit","e","preventDefault","console","log","onSearch","target","value","fetchData","response","fetch","json","error","showCarousel","showGallery","imageList","map","image","cols","id","item","caption","src","textAlign","tags","posttag","tag","ai_tags","aitag","background","aiitem","parseFloat","confidence"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Carousel from 'react-material-ui-carousel'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport MatchBar from \"./Matchbar\";\n\n// import image1 from './Gallery/image1/image1.jpg';\n// import image2 from './Gallery/image2/image2.jpg';\n// import image3 from './Gallery/image3/image3.png';\n\n// const images = [\n//   { id: 1, src: `${image1}` },\n//   { id: 2, src: `${image2}` },\n//   { id: 3, src: `${image3}` },\n// ]\n\n// styling for dialog\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: \"transparent\",\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n    borderRadius: \"5px\",\n  },\n  modal: {\n    display: \"flex\",\n    padding: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    color: \"#2B4466\",\n    backgroundColor: \"#E6DAC8\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: \"#E6DAC8\"\n  },\n}))(MuiDialogContent);\n\nexport default function Search() {\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [gallery, setGallery] = React.useState(true);\n  const [carousel, setCarousel] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setQuery(search);\n    console.log(search);\n  }\n\n  const onSearch = (e) => {\n    setSearch(e.target.value);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:8000/images?tag=${query}`\n        );\n        const json = await response.json();\n        console.log({ json });\n        setResults(json);\n        handleOpen();\n      } catch (error) { }\n    }\n\n    if (query !== \"\") {\n      console.log(\"the data does not exist\");\n      fetchData();\n    }\n  }, [query]);\n\n  const showCarousel = () => {\n    setGallery(false);\n    setCarousel(true);\n  }\n\n  const showGallery = () => {\n    setCarousel(false);\n    setGallery(true);\n  }\n\n  return (\n    <div>\n      <div className=\"searchBar\" style={{ padding: \"15px 20px 0px 0px\" }}>\n        <SearchBar\n          placeholder='Search a tag'\n          value={search}\n          onChange={onSearch}\n          onRequestSearch={onSubmit}\n          cancelOnEscape=\"true\"\n        />\n      </div>\n      <div className=\"eChartsGallery\">\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"simple-dialog-title\"\n          open={open}\n          maxWidth=\"md\"\n          fullWidth={true}\n        >\n          <DialogTitle\n            //newTitle={newTitle}\n            id=\"customized-dialog-title\"\n            onClose={handleClose}\n          >\n            <Typography variant=\"h5\">Images for `${search}`</Typography>\n          </DialogTitle>\n          <DialogContent dividers>\n            {gallery && (\n              <div className=\"gallery\">\n                <div className={classes.root}>\n                  <ImageList rowHeight={160} className={classes.imageList} cols={3}>\n                    {results.map((image) => (\n                      <ImageListItem key={image.id} cols={image.cols || 1} >\n                        <img src={image.id} alt=\"\" maxHeight=\"100px\" onClick={showCarousel}\n                        />\n                      </ImageListItem>\n                    ))}\n                  </ImageList>\n                </div>\n              </div>\n            )}\n            {carousel && (\n              <Carousel>\n                {results.map((item) => (\n                  <div className=\"carouselResults\">\n                    <Typography className=\"mtag-label\"> {item.caption}\n                    </Typography>\n                    <div key={item.id} cols={item.cols || 1} style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <img id={item.id} src={item.src} alt=\"\" maxHeight=\"100px\" onClick={showGallery}\n                      />\n                    </div>\n\n                    <div className=\"metadata\" >\n                      <div style={{ display: \"block\", textAlign: \"center\" }}>\n                        <Typography className=\"mtag-label\"> Our Tags:\n                        </Typography>\n                      </div>\n                      <div className=\"userTags\" style={{ display: \"flex\", justifyContent: \"center\", padding: \"10px\" }}>\n\n\n                        {item.tags.map((posttag) => {\n\n                          return (\n                            <Chip className=\"chip1\" style={{ color: \"#B272CE\", backgroundColor: \"#FFFFFF\" }} avatar={\n                              <Avatar style={{ color: \"#B272CE\" }}>\n                                <div style={{ color: \"#FFFFFF\" }}>\n                                  #\n                                </div>\n                              </Avatar>\n                            }\n                              key={posttag.id}\n                              label={posttag.tag}\n                              component=\"a\"\n                              href=\"#chip\"\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              clickable\n                            />\n                          );\n                        })}\n                      </div>\n\n                      <div style={{ display: \"block\", textAlign: \"center\" }}>\n                        <Typography className=\"ai_tags\"> Tags from ImageNet AI:\n                        </Typography>\n                      </div>\n                      <div className=\"AITAgs\" style={{ display: \"flex\", justifyContent: \"center\", padding: \"10px\" }}>\n                        {item.ai_tags.map((aitag) => {\n\n                          return (\n                            <Chip className=\"chip2\" style={{ color: \"#000000\", backgroundColor: \"#FFFFFF\" }} avatar={\n                              <Avatar style={{ background: \"#B5BCB4\" }}>\n                                <div style={{ color: \"#FFFFFF\" }}>\n                                  #\n                                </div>\n                              </Avatar>\n                            }\n                              key={aitag.id}\n                              label={aitag.tag}\n                              component=\"a\"\n                              href=\"#chip\"\n                              clickable\n                            />\n                          );\n                        })}\n                      </div>\n                      <div>\n                        {item.ai_tags.map((aiitem) => {\n                          return (\n                            <MatchBar\n                              match={parseFloat(aiitem.confidence)}\n                              aitag={aiitem.tag}\n                            />\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>))}\n              </Carousel>\n            )\n            }\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/upload/uploadButton/FileInputSimple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileInput(props) {\n  _s();\n\n  const [src, setSrc] = useState(null);\n  const [text, showText] = useState(true);\n  const fileInput = useRef(null);\n\n  const handleImageSelection = event => {\n    props.selectedImage(event.target.files[0]);\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      setSrc(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  useEffect(() => {\n    if (src) {\n      props.showInputForms();\n      showText(false);\n    }\n  }, [src]);\n\n  const openFileInput = () => {\n    fileInput.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-input\",\n    onClick: openFileInput,\n    children: [text && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        maxHeight: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        style: {\n          color: \"#000000\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            backgroundColor: \"#FFFFFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), \"click\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \"+\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \"upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          height: \"100%\"\n        },\n        className: \"loaded-image\",\n        src: src,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInput,\n        style: {\n          display: \"none\"\n        },\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileInput, \"1pye3r4T9kt4seNn1jwxS1cJ3sI=\");\n\n_c = FileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/m-v2-frontend/frontend/src/components/upload/uploadButton/FileInputSimple.js"],"names":["React","useState","useRef","useEffect","Typography","FileInput","props","src","setSrc","text","showText","fileInput","handleImageSelection","event","selectedImage","target","files","file","reader","FileReader","onload","e","result","readAsDataURL","showInputForms","openFileInput","current","click","width","maxHeight","color","textAlign","backgroundColor","display","justifyContent","padding","height"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function FileInput(props) {\n\n  const [src, setSrc] = useState(null);\n  const [text, showText] = useState(true);\n  const fileInput = useRef(null);\n\n  const handleImageSelection = (event) => {\n    props.selectedImage(event.target.files[0]);\n\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      setSrc(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  useEffect(() => {\n    if (src) {\n      props.showInputForms();\n      showText(false);\n    }\n  }, [src]);\n\n  const openFileInput = () => {\n    fileInput.current.click();\n  };\n\n  return (\n    <div\n      className=\"image-input\"\n      onClick={openFileInput}\n    >\n      {text &&\n        <div\n          style={{\n            width: \"100%\",\n            maxHeight: \"400px\",\n          }}>\n\n          <Typography variant=\"h2\" style={{ color: \"#000000\" }}>\n            <div style={{ textAlign: \"center\", backgroundColor: \"#FFFFFF\", }}>\n              <br />\n              click\n              <br />\n              +\n              <br />\n              upload\n            </div>\n          </Typography>\n        </div>\n      }\n      <div style={{ display: \"flex\", justifyContent: \"center\", padding: \"40px\" }}>\n        <img\n          style={{ height: \"100%\" }}\n          className=\"loaded-image\"\n          src={src}\n          alt=\"\"\n        />\n      </div>\n      <label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImageSelection}\n        />\n      </label>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}